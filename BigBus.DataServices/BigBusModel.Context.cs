//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BigBus.DataServices
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BigBusEntities : DbContext
    {
        public BigBusEntities()
            : base("name=BigBusEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_AccountManager> tb_AccountManager { get; set; }
        public virtual DbSet<tb_AccountManager_MicroSite> tb_AccountManager_MicroSite { get; set; }
        public virtual DbSet<tb_AdminLog> tb_AdminLog { get; set; }
        public virtual DbSet<tb_AdminSession> tb_AdminSession { get; set; }
        public virtual DbSet<tb_AdminUser> tb_AdminUser { get; set; }
        public virtual DbSet<tb_AgentCashSale> tb_AgentCashSale { get; set; }
        public virtual DbSet<tb_AgentCommission> tb_AgentCommission { get; set; }
        public virtual DbSet<tb_AgentOrder> tb_AgentOrder { get; set; }
        public virtual DbSet<tb_AgentOrderError> tb_AgentOrderError { get; set; }
        public virtual DbSet<tb_AgentProfile> tb_AgentProfile { get; set; }
        public virtual DbSet<tb_Barcode> tb_Barcode { get; set; }
        public virtual DbSet<tb_Basket> tb_Basket { get; set; }
        public virtual DbSet<tb_Basket_Promotion> tb_Basket_Promotion { get; set; }
        public virtual DbSet<tb_BasketLine> tb_BasketLine { get; set; }
        public virtual DbSet<tb_Company> tb_Company { get; set; }
        public virtual DbSet<tb_ContactData> tb_ContactData { get; set; }
        public virtual DbSet<tb_Country> tb_Country { get; set; }
        public virtual DbSet<tb_Currency> tb_Currency { get; set; }
        public virtual DbSet<tb_CustomPage> tb_CustomPage { get; set; }
        public virtual DbSet<tb_CustomPage_Language> tb_CustomPage_Language { get; set; }
        public virtual DbSet<tb_Download> tb_Download { get; set; }
        public virtual DbSet<tb_DownloadFolder> tb_DownloadFolder { get; set; }
        public virtual DbSet<tb_DownloadMetaData> tb_DownloadMetaData { get; set; }
        public virtual DbSet<tb_Email> tb_Email { get; set; }
        public virtual DbSet<tb_ExternalOrder_Barcode> tb_ExternalOrder_Barcode { get; set; }
        public virtual DbSet<tb_GalleryImage> tb_GalleryImage { get; set; }
        public virtual DbSet<tb_GoogleCode> tb_GoogleCode { get; set; }
        public virtual DbSet<tb_GroupBooking> tb_GroupBooking { get; set; }
        public virtual DbSet<tb_GroupBooking_Stop> tb_GroupBooking_Stop { get; set; }
        public virtual DbSet<tb_GroupBooking_Time> tb_GroupBooking_Time { get; set; }
        public virtual DbSet<tb_HomePageData> tb_HomePageData { get; set; }
        public virtual DbSet<tb_HTMLMetaTag> tb_HTMLMetaTag { get; set; }
        public virtual DbSet<tb_Image> tb_Image { get; set; }
        public virtual DbSet<tb_ImageFolder> tb_ImageFolder { get; set; }
        public virtual DbSet<tb_ImageMetaData> tb_ImageMetaData { get; set; }
        public virtual DbSet<tb_Language> tb_Language { get; set; }
        public virtual DbSet<tb_Log> tb_Log { get; set; }
        public virtual DbSet<tb_MicroSite> tb_MicroSite { get; set; }
        public virtual DbSet<tb_MicroSite_Language> tb_MicroSite_Language { get; set; }
        public virtual DbSet<tb_MultiTicket_Promotion> tb_MultiTicket_Promotion { get; set; }
        public virtual DbSet<tb_Navigation> tb_Navigation { get; set; }
        public virtual DbSet<tb_NavigationItem> tb_NavigationItem { get; set; }
        public virtual DbSet<tb_NavigationItem_Language> tb_NavigationItem_Language { get; set; }
        public virtual DbSet<tb_NewsItem> tb_NewsItem { get; set; }
        public virtual DbSet<tb_Newsletter> tb_Newsletter { get; set; }
        public virtual DbSet<tb_NewsletterComposite> tb_NewsletterComposite { get; set; }
        public virtual DbSet<tb_NewsletterStaticSection> tb_NewsletterStaticSection { get; set; }
        public virtual DbSet<tb_NewsletterText> tb_NewsletterText { get; set; }
        public virtual DbSet<tb_NewsletterText_Language> tb_NewsletterText_Language { get; set; }
        public virtual DbSet<tb_Order> tb_Order { get; set; }
        public virtual DbSet<tb_Orderline> tb_Orderline { get; set; }
        public virtual DbSet<tb_OrderLine_GeneratedBarcode> tb_OrderLine_GeneratedBarcode { get; set; }
        public virtual DbSet<tb_PasswordAdminResetRequest> tb_PasswordAdminResetRequest { get; set; }
        public virtual DbSet<tb_PasswordResetRequest> tb_PasswordResetRequest { get; set; }
        public virtual DbSet<tb_PaymentTransaction> tb_PaymentTransaction { get; set; }
        public virtual DbSet<tb_Phrase> tb_Phrase { get; set; }
        public virtual DbSet<tb_Phrase_Language> tb_Phrase_Language { get; set; }
        public virtual DbSet<tb_PlaceOfInterest> tb_PlaceOfInterest { get; set; }
        public virtual DbSet<tb_PlaceOfInterest_Language> tb_PlaceOfInterest_Language { get; set; }
        public virtual DbSet<tb_PlaceOfInterest_Stop> tb_PlaceOfInterest_Stop { get; set; }
        public virtual DbSet<tb_Promotion> tb_Promotion { get; set; }
        public virtual DbSet<tb_Promotion_DiscountedTicket> tb_Promotion_DiscountedTicket { get; set; }
        public virtual DbSet<tb_Route> tb_Route { get; set; }
        public virtual DbSet<tb_Route_Language> tb_Route_Language { get; set; }
        public virtual DbSet<tb_Route_Stop> tb_Route_Stop { get; set; }
        public virtual DbSet<tb_Session> tb_Session { get; set; }
        public virtual DbSet<tb_SiteText> tb_SiteText { get; set; }
        public virtual DbSet<tb_SiteText_Language> tb_SiteText_Language { get; set; }
        public virtual DbSet<tb_Stop> tb_Stop { get; set; }
        public virtual DbSet<tb_Stop_Language> tb_Stop_Language { get; set; }
        public virtual DbSet<tb_Tag> tb_Tag { get; set; }
        public virtual DbSet<tb_ThingsToDoItem> tb_ThingsToDoItem { get; set; }
        public virtual DbSet<tb_Ticket> tb_Ticket { get; set; }
        public virtual DbSet<tb_Ticket_ExclusionDate> tb_Ticket_ExclusionDate { get; set; }
        public virtual DbSet<tb_Ticket_ExclusionWeekday> tb_Ticket_ExclusionWeekday { get; set; }
        public virtual DbSet<tb_Ticket_Language> tb_Ticket_Language { get; set; }
        public virtual DbSet<tb_TicketApi> tb_TicketApi { get; set; }
        public virtual DbSet<tb_TicketCombination> tb_TicketCombination { get; set; }
        public virtual DbSet<tb_TicketCost> tb_TicketCost { get; set; }
        public virtual DbSet<tb_TicketCostVariation> tb_TicketCostVariation { get; set; }
        public virtual DbSet<tb_TourAnimationContent> tb_TourAnimationContent { get; set; }
        public virtual DbSet<tb_Transaction_Address> tb_Transaction_Address { get; set; }
        public virtual DbSet<tb_Transaction_AddressPaypal> tb_Transaction_AddressPaypal { get; set; }
        public virtual DbSet<tb_URLRewrite> tb_URLRewrite { get; set; }
        public virtual DbSet<tb_User> tb_User { get; set; }
        public virtual DbSet<tb_DiallingCode> tb_DiallingCode { get; set; }
    
        [DbFunction("BigBusEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string delimiter, string list)
        {
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[BigBusEntities].[Split](@Delimiter, @List)", delimiterParameter, listParameter);
        }
    
        public virtual ObjectResult<AgentCommissionReport_Result> AgentCommissionReport(string micrositeId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> isCashSale, Nullable<System.Guid> accountManagerId, Nullable<bool> useAccountManagerId)
        {
            var micrositeIdParameter = micrositeId != null ?
                new ObjectParameter("MicrositeId", micrositeId) :
                new ObjectParameter("MicrositeId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var isCashSaleParameter = isCashSale.HasValue ?
                new ObjectParameter("IsCashSale", isCashSale) :
                new ObjectParameter("IsCashSale", typeof(bool));
    
            var accountManagerIdParameter = accountManagerId.HasValue ?
                new ObjectParameter("AccountManagerId", accountManagerId) :
                new ObjectParameter("AccountManagerId", typeof(System.Guid));
    
            var useAccountManagerIdParameter = useAccountManagerId.HasValue ?
                new ObjectParameter("UseAccountManagerId", useAccountManagerId) :
                new ObjectParameter("UseAccountManagerId", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgentCommissionReport_Result>("AgentCommissionReport", micrositeIdParameter, startDateParameter, endDateParameter, isCashSaleParameter, accountManagerIdParameter, useAccountManagerIdParameter);
        }
    
        public virtual ObjectResult<ManagerAccountHistory_Result> ManagerAccountHistory(string micrositeId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> isCashSale, Nullable<System.Guid> accountManagerId, Nullable<bool> useAccountManagerId)
        {
            var micrositeIdParameter = micrositeId != null ?
                new ObjectParameter("MicrositeId", micrositeId) :
                new ObjectParameter("MicrositeId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var isCashSaleParameter = isCashSale.HasValue ?
                new ObjectParameter("IsCashSale", isCashSale) :
                new ObjectParameter("IsCashSale", typeof(bool));
    
            var accountManagerIdParameter = accountManagerId.HasValue ?
                new ObjectParameter("AccountManagerId", accountManagerId) :
                new ObjectParameter("AccountManagerId", typeof(System.Guid));
    
            var useAccountManagerIdParameter = useAccountManagerId.HasValue ?
                new ObjectParameter("UseAccountManagerId", useAccountManagerId) :
                new ObjectParameter("UseAccountManagerId", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ManagerAccountHistory_Result>("ManagerAccountHistory", micrositeIdParameter, startDateParameter, endDateParameter, isCashSaleParameter, accountManagerIdParameter, useAccountManagerIdParameter);
        }
    
        public virtual ObjectResult<PromotionCodeReport_Result> PromotionCodeReport(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string micrositeId, string promoCode)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var micrositeIdParameter = micrositeId != null ?
                new ObjectParameter("micrositeId", micrositeId) :
                new ObjectParameter("micrositeId", typeof(string));
    
            var promoCodeParameter = promoCode != null ?
                new ObjectParameter("promoCode", promoCode) :
                new ObjectParameter("promoCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PromotionCodeReport_Result>("PromotionCodeReport", startdateParameter, enddateParameter, micrositeIdParameter, promoCodeParameter);
        }
    
        public virtual int sp_AdminUser_Log(string test)
        {
            var testParameter = test != null ?
                new ObjectParameter("test", test) :
                new ObjectParameter("test", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AdminUser_Log", testParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Barcode_GetNextBarcode(string microsite_Id, string ticket_Type, string ticket_Id, string ticket_TicketType, Nullable<bool> isInDrEnvironment)
        {
            var microsite_IdParameter = microsite_Id != null ?
                new ObjectParameter("Microsite_Id", microsite_Id) :
                new ObjectParameter("Microsite_Id", typeof(string));
    
            var ticket_TypeParameter = ticket_Type != null ?
                new ObjectParameter("Ticket_Type", ticket_Type) :
                new ObjectParameter("Ticket_Type", typeof(string));
    
            var ticket_IdParameter = ticket_Id != null ?
                new ObjectParameter("Ticket_Id", ticket_Id) :
                new ObjectParameter("Ticket_Id", typeof(string));
    
            var ticket_TicketTypeParameter = ticket_TicketType != null ?
                new ObjectParameter("Ticket_TicketType", ticket_TicketType) :
                new ObjectParameter("Ticket_TicketType", typeof(string));
    
            var isInDrEnvironmentParameter = isInDrEnvironment.HasValue ?
                new ObjectParameter("IsInDrEnvironment", isInDrEnvironment) :
                new ObjectParameter("IsInDrEnvironment", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Barcode_GetNextBarcode", microsite_IdParameter, ticket_TypeParameter, ticket_IdParameter, ticket_TicketTypeParameter, isInDrEnvironmentParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_Email_GetEmailsToSend_Result> sp_Email_GetEmailsToSend()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Email_GetEmailsToSend_Result>("sp_Email_GetEmailsToSend");
        }
    
        public virtual int sp_Email_Update_DateFirstAttempted(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Email_Update_DateFirstAttempted", idParameter);
        }
    
        public virtual int sp_Email_Update_DateSent(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Email_Update_DateSent", idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_NewsletterTextLanguage_Purge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_NewsletterTextLanguage_Purge");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_Reports_Agents(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<System.Guid> currencyid, string sitelist, string agentcompanylist, Nullable<bool> isdatebooked, Nullable<bool> isCompany)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var currencyidParameter = currencyid.HasValue ?
                new ObjectParameter("currencyid", currencyid) :
                new ObjectParameter("currencyid", typeof(System.Guid));
    
            var sitelistParameter = sitelist != null ?
                new ObjectParameter("sitelist", sitelist) :
                new ObjectParameter("sitelist", typeof(string));
    
            var agentcompanylistParameter = agentcompanylist != null ?
                new ObjectParameter("agentcompanylist", agentcompanylist) :
                new ObjectParameter("agentcompanylist", typeof(string));
    
            var isdatebookedParameter = isdatebooked.HasValue ?
                new ObjectParameter("isdatebooked", isdatebooked) :
                new ObjectParameter("isdatebooked", typeof(bool));
    
            var isCompanyParameter = isCompany.HasValue ?
                new ObjectParameter("isCompany", isCompany) :
                new ObjectParameter("isCompany", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Reports_Agents", startdateParameter, enddateParameter, currencyidParameter, sitelistParameter, agentcompanylistParameter, isdatebookedParameter, isCompanyParameter);
        }
    
        public virtual int sp_Reports_FixedOrOpenDate(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string sitelist, Nullable<int> usertype, Nullable<bool> isdatebooked, string reporttype)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var sitelistParameter = sitelist != null ?
                new ObjectParameter("sitelist", sitelist) :
                new ObjectParameter("sitelist", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var isdatebookedParameter = isdatebooked.HasValue ?
                new ObjectParameter("isdatebooked", isdatebooked) :
                new ObjectParameter("isdatebooked", typeof(bool));
    
            var reporttypeParameter = reporttype != null ?
                new ObjectParameter("reporttype", reporttype) :
                new ObjectParameter("reporttype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Reports_FixedOrOpenDate", startdateParameter, enddateParameter, sitelistParameter, usertypeParameter, isdatebookedParameter, reporttypeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> sp_Reports_FixedOrOpenDate_V2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("sp_Reports_FixedOrOpenDate_V2");
        }
    
        public virtual ObjectResult<sp_Reports_Orders_FixedAndOpenDate_Result> sp_Reports_Orders_FixedAndOpenDate(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string sitelist, Nullable<int> usertype, Nullable<bool> isdatebooked)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var sitelistParameter = sitelist != null ?
                new ObjectParameter("sitelist", sitelist) :
                new ObjectParameter("sitelist", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var isdatebookedParameter = isdatebooked.HasValue ?
                new ObjectParameter("isdatebooked", isdatebooked) :
                new ObjectParameter("isdatebooked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Reports_Orders_FixedAndOpenDate_Result>("sp_Reports_Orders_FixedAndOpenDate", startdateParameter, enddateParameter, sitelistParameter, usertypeParameter, isdatebookedParameter);
        }
    
        public virtual ObjectResult<sp_Reports_Orders_FixedDate_Result> sp_Reports_Orders_FixedDate(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string sitelist, Nullable<int> usertype, Nullable<bool> isdatebooked)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var sitelistParameter = sitelist != null ?
                new ObjectParameter("sitelist", sitelist) :
                new ObjectParameter("sitelist", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var isdatebookedParameter = isdatebooked.HasValue ?
                new ObjectParameter("isdatebooked", isdatebooked) :
                new ObjectParameter("isdatebooked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Reports_Orders_FixedDate_Result>("sp_Reports_Orders_FixedDate", startdateParameter, enddateParameter, sitelistParameter, usertypeParameter, isdatebookedParameter);
        }
    
        public virtual ObjectResult<sp_Reports_Orders_OpenDate_Result> sp_Reports_Orders_OpenDate(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string sitelist, Nullable<int> usertype, Nullable<bool> isdatebooked)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var sitelistParameter = sitelist != null ?
                new ObjectParameter("sitelist", sitelist) :
                new ObjectParameter("sitelist", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var isdatebookedParameter = isdatebooked.HasValue ?
                new ObjectParameter("isdatebooked", isdatebooked) :
                new ObjectParameter("isdatebooked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Reports_Orders_OpenDate_Result>("sp_Reports_Orders_OpenDate", startdateParameter, enddateParameter, sitelistParameter, usertypeParameter, isdatebookedParameter);
        }
    
        public virtual int sp_Reports_ToursByCountries(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string countryid, string siteid, string user)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var countryidParameter = countryid != null ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(string));
    
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Reports_ToursByCountries", startdateParameter, enddateParameter, countryidParameter, siteidParameter, userParameter);
        }
    
        public virtual int sp_Reports_ToursOrAttractions(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<System.Guid> currencyid, string tttype, string siteid, string attractionslist, Nullable<bool> isdatebooked, string userType)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var currencyidParameter = currencyid.HasValue ?
                new ObjectParameter("currencyid", currencyid) :
                new ObjectParameter("currencyid", typeof(System.Guid));
    
            var tttypeParameter = tttype != null ?
                new ObjectParameter("tttype", tttype) :
                new ObjectParameter("tttype", typeof(string));
    
            var siteidParameter = siteid != null ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(string));
    
            var attractionslistParameter = attractionslist != null ?
                new ObjectParameter("attractionslist", attractionslist) :
                new ObjectParameter("attractionslist", typeof(string));
    
            var isdatebookedParameter = isdatebooked.HasValue ?
                new ObjectParameter("isdatebooked", isdatebooked) :
                new ObjectParameter("isdatebooked", typeof(bool));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Reports_ToursOrAttractions", startdateParameter, enddateParameter, currencyidParameter, tttypeParameter, siteidParameter, attractionslistParameter, isdatebookedParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<sp_Route_Stops_GetUnassignedStops_Result> sp_Route_Stops_GetUnassignedStops(string microsite_Id, Nullable<System.Guid> route_Id)
        {
            var microsite_IdParameter = microsite_Id != null ?
                new ObjectParameter("Microsite_Id", microsite_Id) :
                new ObjectParameter("Microsite_Id", typeof(string));
    
            var route_IdParameter = route_Id.HasValue ?
                new ObjectParameter("Route_Id", route_Id) :
                new ObjectParameter("Route_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Route_Stops_GetUnassignedStops_Result>("sp_Route_Stops_GetUnassignedStops", microsite_IdParameter, route_IdParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TourAttractionReportSpecificAttractionReport_Result> TourAttractionReportSpecificAttractionReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.Guid> ticketId, string userType)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(System.Guid));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TourAttractionReportSpecificAttractionReport_Result>("TourAttractionReportSpecificAttractionReport", startDateParameter, endDateParameter, ticketIdParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<TourAttractionReportSpecificTourTypeReport_Result> TourAttractionReportSpecificTourTypeReport(string microSiteId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string ticketType, string userType)
        {
            var microSiteIdParameter = microSiteId != null ?
                new ObjectParameter("MicroSiteId", microSiteId) :
                new ObjectParameter("MicroSiteId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var ticketTypeParameter = ticketType != null ?
                new ObjectParameter("TicketType", ticketType) :
                new ObjectParameter("TicketType", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TourAttractionReportSpecificTourTypeReport_Result>("TourAttractionReportSpecificTourTypeReport", microSiteIdParameter, startDateParameter, endDateParameter, ticketTypeParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<TourAttractionReportTicketDateReport_Result> TourAttractionReportTicketDateReport(string microSiteId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var microSiteIdParameter = microSiteId != null ?
                new ObjectParameter("MicroSiteId", microSiteId) :
                new ObjectParameter("MicroSiteId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TourAttractionReportTicketDateReport_Result>("TourAttractionReportTicketDateReport", microSiteIdParameter, startDateParameter, endDateParameter);
        }
    }
}
